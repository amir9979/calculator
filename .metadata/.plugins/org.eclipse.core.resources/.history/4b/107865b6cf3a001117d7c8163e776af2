package dev.log.mhs;

import java.util.ArrayList;

import dev.log.activity.ComponentVector;

/**
 * A hitting set consists of components and errors. The components together cover
 * the list of errors.
 * 
 * TODO: rewrite? errors isn't used
 * 
 * @author Joel van den Berg
 */
public class HittingSet {

	/**
	 * The components that are in this hitting set
	 */
	ArrayList<String> components;
	
	/**
	 * The errors that are covered by the combination of the components
	 */
	double error;
	
	/**
	 * Initialize this hitting set with no components and errors
	 */
	public HittingSet() {
		components = new ArrayList<String>();
		error = 0.0;
	}
	
	/**
	 * Add a component to the hitting set
	 * @param component The component to be added
	 */
	public void addComponent(String component){
		this.components.add(component);
	}
	
	/**
	 * Sets the error value for this hitting set.
	 * 
	 * @param error The error to be set
	 */
	public void setError(double error) {
		this.error = error;
	}

	/**
	 * Add an error to this hitting set, but only if it is not already in
	 * the error set
	 * 
	 * @param error The error to be added
	 * @return true if it was not in the error set, false otherwise
	 */
	public void getError(double error) {
		return this.error;
	}
	
	/**
	 * Return the components that are in this hitting set
	 * @return A list of components
	 */
	public ArrayList<String> getComponents() {
		return components;
	}
	
	/**
	 * Checks if this hitting set contains the given component
	 * @param component The component that should be found
	 * @return true if it contains the component, false otherwise
	 */
	public boolean containsComponent(String component){
		return components.contains(component);
	}
	
	/**
	 * Check whether a component in the execution is in this hitset
	 * @param execution
	 */
	public boolean containsAnyComponent(ArrayList<String> execution) {
		for(String c : execution) {
			if(this.containsComponent(c)) return true;
		}
		return false;
	}

	/**
	 * Checks whether hitset contains all components of this hitset.
	 * |this intersection hitset| equals |this|
	 * @param hitset The hitset that may contain all the components of this set
	 * @return <b>true</b> this hitset's components are also in hitset; <b>false</b> this hitset contains a componenent not in hitset
	 */
	public boolean containsAllComponents(HittingSet hitset) {
		for(String c : this.components) {
			if(!hitset.containsComponent(c)) {
				return false;
			}
		}
		return true;
	}
	
	/**
	 * Deep copy this hitting set
	 * @return the deep copy of the hitting set
	 */
	public HittingSet copy() {
		HittingSet copy = new HittingSet();
		for(String c : this.components)
			copy.addComponent(c);
		copy.setError(this.error);
		
		return copy;
	}
	
	/**
	 * Returns a more readable form for the hittingset by returning the components
	 * for each hitting set.
	 * @return More human readable string
	 */
	@Override
	public String toString() {
		String str = "[";
		int i = 0;
		for(String set : this.components) {
			if(i > 0) str += ",";
			str += set;
			i++;
		}
		str +=  "{" + this.error +"}]";
		return str;
	}
}
