package calculations.dev.parseservice;

import java.io.IOException;
import java.util.List;
import java.util.Map;

import org.ebayopensource.turmeric.runtime.common.exceptions.ServiceException;
import org.ebayopensource.turmeric.runtime.common.impl.internal.pipeline.MessageContextAccessorImpl;

import calculations.dev.ParseRequest;
import calculations.dev.ParseResponse;
import calculations.dev.parseservice.gen.SharedParseServiceConsumer;
import dev.log.barinel.translate.Execution;
import dev.log.handler.RequestLogHeaderHandler;
import dev.log.trace.MySQLConnector;
import dev.log.trace.SpectrumBasedFaultLocalization;

public class ParseServiceConsumer extends SharedParseServiceConsumer {
	
	public ParseServiceConsumer(String clientName) throws ServiceException {
		super(clientName);
		// TODO Auto-generated constructor stub
	}
	
	public static int parse(String x) throws ServiceException {
		ParseServiceConsumer consumer = new ParseServiceConsumer("ParseServiceConsumer");
		ParseRequest request = new ParseRequest();
		request.setInput(x);
		ParseResponse response = consumer.parse(request);
		return response.getOutput();
	}
	
	public static void main(String[] args) throws ServiceException, IOException {
		/**
		 * Enter the testcases!
		 */
//		MySQLConnector connector = new MySQLConnector(SpectrumBasedFaultLocalization.DATABASE_NAME);
//		connector.createTable("CREATE TABLE IF NOT EXISTS "+SpectrumBasedFaultLocalization.ERROR_TABLE_NAME+" ("
//               + "id INT UNSIGNED NOT NULL AUTO_INCREMENT,"
//               + "PRIMARY KEY (id),"
//               + "process_id CHAR(40), error BOOL)");
		
		int error = 0;
		
		if(parse("-3^3") != -27) error = 1;
		System.out.println("MESSAGE "+MessageContextAccessorImpl.getContext());
		String process_id = MessageContextAccessorImpl.getContext().getRequestMessage().getTransportHeader(RequestLogHeaderHandler.PROCESS_ID);
		Execution.addToMatrix(process_id, error);
		
		System.out.println(Execution.getMatrix().getHittingSets());
//		addError(connector,bool);
		
//		bool = parse("3+3") != 6;
//		addError(connector,bool);
					
//		bool = parse("-3*9") != -27;
//		addError(connector,bool);
					
//		bool = parse("-3*-5") != 15;
//		addError(connector,bool);
					
//		bool = parse("3*10") != 30;
//		addError(connector,bool);
			
//		SpectrumBasedFaultLocalization.createMetrics();
	}
	
//	private static void addError(MySQLConnector connector, boolean bool) {
//		List<Map> results = connector.select(String.format("SELECT process_id FROM %s WHERE id = (SELECT MAX(id) FROM %s);",
//				SpectrumBasedFaultLocalization.TABLE_NAME,
//				SpectrumBasedFaultLocalization.TABLE_NAME));
//		String process_id = (String)results.get(0).get("process_id");
//		connector.update(String.format("INSERT INTO %s VALUES (0,'%s',%s);",
//				SpectrumBasedFaultLocalization.ERROR_TABLE_NAME,
//				process_id,
//				bool));
//	}

}
